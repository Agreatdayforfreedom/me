---
import Image from '../components/svg/Image.astro';

interface Props {
  img: string;
  data_open: string;
}

const { img, data_open } = Astro.props;

---

<div class="w-[18px] h-[18px]">
  <button id="img_preview" data-id={data_open} ><Image size={18}/></button>
  <dialog class="max-w-full md:max-w-[700px] max-h-auto" data-open={data_open}>
    <img 
      src={img}
    />
    <form class="fixed top-0 right-0">
      <button id="onclose" formmethod="dialog"><svg width="64px" height="64px" fill="none" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="m10.939 12-3.9697 3.9697 1.0607 1.0607 3.9697-3.9697 3.9697 3.9697 1.0607-1.0607-3.9697-3.9697 3.9696-3.9696-1.0607-1.0607-3.9696 3.9696-3.9696-3.9696-1.0607 1.0607 3.9696 3.9696z" clip-rule="evenodd" fill="#fff" fill-rule="evenodd"/>
        </svg>
      </button>
    </form>
  </dialog>

  <script>
    const $buttons: NodeListOf<HTMLElement> = document.querySelectorAll("#img_preview");
    

    $buttons.forEach($button => {      
      const $dialog: HTMLDialogElement | null = document.querySelector(`[data-open='${$button.dataset.id}']`);
      const $img  = document.querySelector(`[data-open='${$button.dataset.id}']>img`);
      const $onclose = document.querySelector(`[data-open='${$button.dataset.id}']>form>button`);
      if(!$img || !$dialog) return;
      
      $onclose?.addEventListener('click', (e) => {
        e.preventDefault();
        
        if($dialog) {
          $dialog.close()
        }
      })
      $img.addEventListener("click", (e) => {
      e.stopPropagation()
      })

      $dialog.addEventListener("click", () => {
        $dialog.close()
      })
      $button?.addEventListener('click',() => {
        if($dialog) {
          $dialog.showModal();
        }
      });
    });

  </script>
</div>

<style>

/* dialog {
            width: 100%;
            max-width: 80%;
            height: auto;
            position: relative;
        }

        img {
            width: 100%;
            height: auto;
            object-fit: contain;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            margin: auto;
        } */
  dialog::backdrop {

    backdrop-filter: blur(0px);
    transition: display .5s allow-discrete,
    overlay .5s allow-discrete,backdrop-filter .5s;
  }

  dialog[open]::backdrop{
    backdrop-filter: blur(2px);
  }

  @starting-style {
  dialog[open]::backdrop {
    backdrop-filter: blur(0px);
    
  }
}

  dialog[open] {
    animation: expandIn 0.25s ease normal;
  }
  
  dialog[open]>form {

    animation: expandIn 2s ease normal;
    
  }

  @keyframes expandIn{
    from {
      opacity: 0;
      scale: 0.5;
    }
    to {
      opacity: 1;
      scale:1;
    }
  }
</style>