---
import Image from '../components/svg/Image.astro';

interface Props {
  paths: string[];
  data_open: string;
}

const { paths, data_open } = Astro.props;

---

<div class="w-[18px] h-[18px]">
  <button id="img_preview" data-id={data_open} ><Image size={18}/></button>
  <dialog class="max-w-full md:max-w-[700px] max-h-auto bg-transparent" data-open={data_open}>
    {paths.map((path:string) => (
      <div id="slide">
        <img src={path} />
      </div>
    ))}
      
    <div class="text-white justify-center flex gap-5 mt-2">
      <span id="left"  class="hover:-translate-x-1 transition-transform hover:cursor-pointer">
        <svg  height="32px"  width="32px" fill="#fff" stroke="#000000" viewBox="0 -28.56 147.25 147.25">
          <g transform="rotate(10 0 0) translate(8 0)
          ">

            <path d="M79.34,22.4A35.81,35.81,0,0,0,89.89,21c14.44-3.8,29.16-5.94,43.94-7.75,6.81-.83,10.07,1.75,11.64,8.3,2.16,9,2.07,18.11,1.23,27.28-.37,4-2.36,6.44-6.08,7.28-4.45,1-9,1.7-13.48,2.45-12.12,2-24.25,4-36.37,6a12.33,12.33,0,0,0-2.46,1c-3.4,7,1.11,14.83-1.93,21.79-4.06,3.45-8.33,3.51-12.87,1.3-3.09-1.5-6.32-2.7-9.37-4.27A441.69,441.69,0,0,0,14.7,62.48,117.42,117.42,0,0,1,2.28,56.71a4,4,0,0,1-2-5.12c.94-3,1.9-6,4.8-7.88,2.38-1.57,4.46-3.57,6.74-5.28,9.39-7.06,18.66-14.26,28.23-21C47.72,11.93,55.77,7,63.69,1.83A13.93,13.93,0,0,1,66.84.5C70.56-.75,73.75.34,75.41,4a37.9,37.9,0,0,1,2.34,8.19C78.43,15.45,78.8,18.81,79.34,22.4ZM67.2,12.82a18.83,18.83,0,0,0-9,3.8c-5.5,4.09-11.09,8.07-16.63,12.12C33.06,35,24.51,41.2,16,47.53c-1.26.94-2.13,2.41-3.44,3.93C23.8,55.89,34.45,60,45,64.32S65.09,74.94,76.55,78.93a34.36,34.36,0,0,0,.8-5.41c-.08-2.85-.61-5.69-.73-8.55-.2-5.19.91-6.85,5.8-7.83Q103,53,123.7,49.23c4.17-.78,8.41-1.21,12.43-3.24,1-7.62-.69-14.79-2.17-22a13.24,13.24,0,0,0-2.85-.25C115,26.44,98.94,29.1,82.9,32.05a11.62,11.62,0,0,1-9.63-2A12,12,0,0,1,68,20.69C67.78,18.21,67.49,15.73,67.2,12.82Z"/>
          </g>
        </svg>
        </span>
        <span id="total_images" class="flex items-end font-semibold text-lg"></span>
      <span id="right" class="hover:translate-x-1 transition-transform hover:cursor-pointer">
        <svg  width="32px" height="32px" fill="#fff" viewBox="0 -28.56 147.25 147.25" >
          <g transform="rotate(-5 180 0) scale(-1 1)" transform-origin="center" >
          <path d="M79.34,22.4A35.81,35.81,0,0,0,89.89,21c14.44-3.8,29.16-5.94,43.94-7.75,6.81-.83,10.07,1.75,11.64,8.3,2.16,9,2.07,18.11,1.23,27.28-.37,4-2.36,6.44-6.08,7.28-4.45,1-9,1.7-13.48,2.45-12.12,2-24.25,4-36.37,6a12.33,12.33,0,0,0-2.46,1c-3.4,7,1.11,14.83-1.93,21.79-4.06,3.45-8.33,3.51-12.87,1.3-3.09-1.5-6.32-2.7-9.37-4.27A441.69,441.69,0,0,0,14.7,62.48,117.42,117.42,0,0,1,2.28,56.71a4,4,0,0,1-2-5.12c.94-3,1.9-6,4.8-7.88,2.38-1.57,4.46-3.57,6.74-5.28,9.39-7.06,18.66-14.26,28.23-21C47.72,11.93,55.77,7,63.69,1.83A13.93,13.93,0,0,1,66.84.5C70.56-.75,73.75.34,75.41,4a37.9,37.9,0,0,1,2.34,8.19C78.43,15.45,78.8,18.81,79.34,22.4ZM67.2,12.82a18.83,18.83,0,0,0-9,3.8c-5.5,4.09-11.09,8.07-16.63,12.12C33.06,35,24.51,41.2,16,47.53c-1.26.94-2.13,2.41-3.44,3.93C23.8,55.89,34.45,60,45,64.32S65.09,74.94,76.55,78.93a34.36,34.36,0,0,0,.8-5.41c-.08-2.85-.61-5.69-.73-8.55-.2-5.19.91-6.85,5.8-7.83Q103,53,123.7,49.23c4.17-.78,8.41-1.21,12.43-3.24,1-7.62-.69-14.79-2.17-22a13.24,13.24,0,0,0-2.85-.25C115,26.44,98.94,29.1,82.9,32.05a11.62,11.62,0,0,1-9.63-2A12,12,0,0,1,68,20.69C67.78,18.21,67.49,15.73,67.2,12.82Z"/>
        </g>
          </svg></span>
    </div>

    <form class="fixed top-0 right-0">
      <button id="onclose" formmethod="dialog"><svg width="64px" height="64px" fill="none" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="m10.939 12-3.9697 3.9697 1.0607 1.0607 3.9697-3.9697 3.9697 3.9697 1.0607-1.0607-3.9697-3.9697 3.9696-3.9696-1.0607-1.0607-3.9696 3.9696-3.9696-3.9696-1.0607 1.0607 3.9696 3.9696z" clip-rule="evenodd" fill="#fff" fill-rule="evenodd"/>
        </svg>
      </button>
    </form>
  </dialog>

  <script>
    const $buttons: NodeListOf<HTMLElement> = document.querySelectorAll("#img_preview");
    
    function show(id: string, activedIndex: number) {
      const $slider: NodeListOf<HTMLDivElement> | null  = document.querySelectorAll(`[data-open='${id}']>#slide`);
      
    
      for (let i = 0; i < $slider.length; i++) {
        $slider[i].addEventListener('click', (e) => e.stopPropagation());
        
        if(activedIndex == i) $slider[i].style.display = "block";
        else $slider[i].style.display = "none";
      }
    }

    $buttons.forEach($button => {     
      let activedIndex = 0; 
      const $dialog: HTMLDialogElement | null = document.querySelector(`[data-open='${$button.dataset.id}']`);
      const $onclose = document.querySelector(`[data-open='${$button.dataset.id}']>form>button`);
      const $slider: NodeListOf<HTMLDivElement> | null  = document.querySelectorAll(`[data-open='${$button.dataset.id}']>#slide`);

      if(!$dialog) return;
      $onclose?.addEventListener('click', (e) => {
        e.preventDefault();
        
        if($dialog) {
          $dialog.close()
        }
      })
      
      if ($button.dataset.id) show($button.dataset.id, activedIndex)

      const $left = document.querySelector(`[data-open='${$button.dataset.id}']>div>#left`);
      const $total = document.querySelector(`[data-open='${$button.dataset.id}']>div>#total_images`);
      const $right = document.querySelector(`[data-open='${$button.dataset.id}']>div>#right`);

      if($total) {
        $total.textContent = (activedIndex + 1).toString()
      }
      $left?.addEventListener('click', (e) => {
        e.stopPropagation()
        if(activedIndex > 0) activedIndex--
        else activedIndex = $slider.length - 1;
        if ($button.dataset.id && $total) {
          
          $total.textContent = (activedIndex + 1).toString();
          show($button.dataset.id, activedIndex)
        }
      })
      $right?.addEventListener('click', (e) => {
        e.stopPropagation()
        if(activedIndex < $slider.length - 1) activedIndex++
        else activedIndex = 0;
        if($button.dataset.id && $total) 
        {
          $total.textContent = (activedIndex + 1).toString();
          show($button.dataset.id, activedIndex);
        }
      })

      $dialog.addEventListener("click", () => {
        $dialog.close()
      })
      $button?.addEventListener('click',() => {
        if($dialog) {
          $dialog.showModal();
        }
      });
    });

  </script>
</div>

<style>

  dialog::backdrop {

    backdrop-filter: blur(0px);
    transition: display .5s allow-discrete,
    overlay .5s allow-discrete,backdrop-filter .5s;
  }

  dialog[open]::backdrop{
    backdrop-filter: blur(2px);
  }

  @starting-style {
  dialog[open]::backdrop {
    backdrop-filter: blur(0px);
    
  }
}

  dialog[open] {
    animation: expandIn 0.25s ease normal;
  }
  
  dialog[open]>form {

    animation: expandIn 2s ease normal;
    
  }

  @keyframes expandIn{
    from {
      opacity: 0;
      scale: 0.5;
    }
    to {
      opacity: 1;
      scale:1;
    }
  }
</style>